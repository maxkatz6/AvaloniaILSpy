<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Default="using:ICSharpCode.TreeView">

    <ControlTheme x:Key="ExpandCollapseToggleStyle"
                  TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="9"
                            Height="9"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource SystemColorsControlLightBrush}"
                            CornerRadius="1"
                            UseLayoutRounding="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0%,0%"
                                                 EndPoint="100%,100%">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="White"
                                                  Offset=".2" />
                                    <GradientStop Color="#FFC0B7A6"
                                                  Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path Name="ExpandPath"
                              Margin="1,1,1,1"
                              Fill="Black" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style Selector="^ /template/ Path#ExpandPath">
	        <Setter Property="Data" Value="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
        </Style>
        <Style Selector="^:checked /template/ Path#ExpandPath">
	        <Setter Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Default:InsertMarker}"
                  TargetType="{x:Type Default:InsertMarker}">
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:InsertMarker}">
                    <Grid>
                        <Border VerticalAlignment="Center"
                                Height="2"
                                Background="{DynamicResource SystemColorsHighlightBrush}" />
                        <Path Data="m 0 0 l 3 3 l -3 3"
                              Fill="{DynamicResource SystemColorsHighlightBrush}"
                              HorizontalAlignment="Left" />
                        <Path Data="m 0 0 l -3 3 l 3 3"
                              Fill="{DynamicResource SystemColorsHighlightBrush}"
                              HorizontalAlignment="Right" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </ControlTheme>

    <!-- <ControlTheme TargetType="{x:Type Default:EditTextBox}"> -->
    <!--     <Setter Property="Foreground" -->
    <!--             Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
    <!--     <Setter Property="KeyboardNavigation.TabNavigation" -->
    <!--             Value="None" /> -->
    <!--     <Setter Property="HorizontalContentAlignment" -->
    <!--             Value="Left" /> -->
    <!--     <Setter Property="FocusVisualStyle" -->
    <!--             Value="{x:Null}" /> -->
    <!--     <Setter Property="AllowDrop" -->
    <!--             Value="True" /> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="{x:Type Default:EditTextBox}"> -->
    <!--                 <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" -->
    <!--                         BorderThickness="1" -->
    <!--                         BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" -->
    <!--                         Padding="0 1 2 0"> -->
    <!--                     <ScrollViewer Name="PART_ContentHost" /> -->
    <!--                 </Border> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!-- </ControlTheme> -->
    
    <ControlTheme x:Key="{x:Type Default:SharpTreeView}"
                  TargetType="{x:Type Default:SharpTreeView}"
                  BasedOn="{StaticResource {x:Type ListBox}}">
        <!-- <Style.Triggers> -->
        <!--     <Trigger Property="ShowRoot" -->
        <!--              Value="False"> -->
        <!--         <Setter Property="Padding" -->
        <!--                 Value="5 0 0 0" /> -->
        <!--     </Trigger> -->
        <!-- </Style.Triggers> -->
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Default:SharpTreeViewItem}"
                  TargetType="{x:Type Default:SharpTreeViewItem}">
        <Setter Property="FocusAdorner"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:SharpTreeViewItem}">
                    <Border Background="Transparent">
                        <Border Background="{TemplateBinding Background}">
                            <Default:SharpTreeNodeView x:Name="nodeView"
                                                       HorizontalAlignment="Left" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style Selector="^:selected /template/ Default|SharpTreeNodeView#nodeView">
	        <Setter Property="TextBackground"
	                Value="{DynamicResource SystemColorsHighlightBrush}" />
	        <Setter Property="Foreground"
	                Value="{DynamicResource SystemColorsHighlightTextBrush}" />
        </Style>
        <Style Selector="^:disabled /template/ Default|SharpTreeNodeView#nodeView">
	        <Setter Property="Foreground"
	                Value="{DynamicResource SystemColorsGrayTextBrushKey}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Default:SharpTreeNodeView}"
                  TargetType="{x:Type Default:SharpTreeNodeView}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:SharpTreeNodeView}">
                    <Grid x:Name="RootGrid"
                          Classes.expanded="{Binding IsExpanded}"
                          Classes.isCut="{Binding IsCut}">
                        <Default:LinesRenderer x:Name="linesRenderer"
                                               ClipToBounds="True"
                                               IsVisible="{Binding $parent[Default:SharpTreeView].ShowLines}" />
                        <StackPanel Orientation="Horizontal">
                            <Control Name="spacer" />
                            <ToggleButton Name="expander"
                                          Theme="{StaticResource ExpandCollapseToggleStyle}"
                                          IsChecked="{Binding IsExpanded}"
                                          IsVisible="{Binding ShowExpander}"
                                          Margin="0 0 7 0"
                                          VerticalAlignment="Center" />
                            <Border Name="checkBoxContainer"
                                    Width="16"
                                    Margin="0 0 3 0"
                                    IsVisible="{Binding IsCheckable}">
                                <CheckBox IsChecked="{Binding IsChecked}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                            </Border>
                            <StackPanel Orientation="Horizontal"
                                        Background="Transparent"
                                        ToolTip.Tip="{Binding ToolTip}">
								<ContentPresenter Name="icon"
                                                  IsVisible="{Binding ShowIcon}"
                                                  Width="16"
                                                  Height="16"
                                                  Margin="0 0 5 1"
                                                  VerticalAlignment="Center"
                                                  Focusable="False">
									<ContentPresenter.ContentTemplate>
										<DataTemplate>
											<Image Source="{Binding}"/>
										</DataTemplate>
									</ContentPresenter.ContentTemplate>
								</ContentPresenter>
								<Border Name="textContainer"
								        IsVisible="{Binding !IsEditing}"
                                        Background="{TemplateBinding TextBackground}">
                                    <ContentPresenter Content="{Binding Text}"
                                                      Margin="2 0 6 0"
                                                      VerticalAlignment="Center"
                                                      Focusable="False" />
                                </Border>
                                <Border Name="textEditorContainer" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style Selector="^/template/ Grid ContentPresenter#icon">
	        <Setter Property="Content" Value="{Binding Icon}" />
        </Style>
        <Style Selector="^/template/ Grid.expanded ContentPresenter#icon">
	        <Setter Property="Content" Value="{Binding ExpandedIcon}" />
        </Style>
        <Style Selector="^/template/ Grid.isCut ContentPresenter#icon">
	        <Setter Property="Opacity" Value="0.5" />
        </Style>
    </ControlTheme>

</ResourceDictionary>
